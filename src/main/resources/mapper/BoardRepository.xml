<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.BoardRepository">

    <insert id="save" flushCache="true" parameterType="com.lec.spring.domain.Board" useGeneratedKeys="true"
            keyColumn="id" keyProperty="id">
        INSERT INTO BOARD
            (title, content, user_id, board_type_id, club_id)
        VALUES (#{title}, #{content}, #{user.id}, #{boardType.id}, #{club.id})
    </insert>

    <update id="incViewCnt" flushCache="true">
        UPDATE BOARD
        SET viewcnt = viewcnt + 1
        WHERE id = #{id}
    </update>

    <sql id="SELECT_BASE">
        SELECT b.id                     "b_id",
               b.title                  "b_title",
               b.content                "b_content",
               b.viewcnt                "b_viewcnt",
               b.viewcnt                "b_viewcnt",
               b.regdate                "b_regdate",
               b.club_id                "b_clubId",
               u.id                     "u_id",
               u.tel                    "u_tel",
               u.name                   "u_name",
               u.username               "u_username",
               u.password               "u_password",
               u.address                "u_address",
               u.gender                 "u_gender",
               u.birthday               "u_birthday",
               u.profile_picture        "u_profile_picture",
               u.regdate                "u_regdate",
               bt.id                    "bt_id",
               bt.name                  "bt_name",
               c.id                     "c_id",
               c.name                   "c_name",
               c.category               "c_category",
               c.detail_category        "c_detail_category",
               c.intro                  "c_intro",
               c.content                "c_content",
               c.representative_picture "c_representative_picture"
        FROM BOARD b
                 JOIN USER u ON b.user_id = u.id
                 JOIN BOARD_TYPE bt ON b.board_type_id = bt.id
                 LEFT JOIN CLUB c ON b.club_id = c.id
        WHERE 1 = 1

    </sql>

    <select id="findById" resultType="com.lec.spring.domain.Board" resultMap="mapBoard">
        <include refid="SELECT_BASE"/>
        AND b.id = #{id}
    </select>

    <select id="findByBoardTypeId" resultMap="mapBoard">
        <include refid="SELECT_BASE"/>
        WHERE b.board_type_id = #{boardTypeId}
        ORDER BY b.id DESC
    </select>

    <select id="findAll" resultMap="mapBoard">
        <include refid="SELECT_BASE"/>
        ORDER BY b_regdate DESC
    </select>

    <update id="update" flushCache="true" parameterType="com.lec.spring.domain.Board">
        UPDATE BOARD
        SET title   = #{title},
            content = #{content}
        WHERE id = #{id}
    </update>

    <delete id="delete" flushCache="true" parameterType="com.lec.spring.domain.Board">
        DELETE
        FROM BOARD
        WHERE id = #{id}
    </delete>

    <!-- 페이지용 쿼리 -->
    <select id="selectFromRow" resultMap="mapBoard">
        <include refid="SELECT_BASE"/>
        AND (#{param3} IS NULL OR #{param3} = '' OR bt.id = #{param3})
        OR (#{param4} IS NOT NULL OR #{param4} = '' OR b.id = #{param4})
        ORDER BY b_regdate DESC
        LIMIT #{param1}, #{param2}
    </select>

    <select id="countAll" resultType="int">
        SELECT count(*)
        FROM BOARD b
                 JOIN USER u ON b.user_id = u.id
                 JOIN BOARD_TYPE bt ON b.board_type_id = bt.id
                 LEFT JOIN CLUB c ON b.club_id = c.id
        WHERE (#{param1} IS NULL OR #{param1} = '' OR bt.id = #{param1})
           OR (#{param2} IS NOT NULL OR #{param2} = '' OR b.id = #{param2})

    </select>

    <resultMap id="mapClub" type="com.lec.spring.domain.Club">
        <result column="c_id" property="id"/>
        <result column="c_name" property="name"/>
        <result column="c_category" property="category"/>
        <result column="c_detail_category" property="detail_category"/>
        <result column="c_intro" property="intro"/>
        <result column="c_content" property="content"/>
        <result column="c_representative_picture" property="representative_picture"/>
    </resultMap>

    <resultMap id="mapBoardType" type="com.lec.spring.domain.BoardType">
        <result column="bt_id" property="id"/>
        <result column="bt_name" property="name"/>
    </resultMap>

    <resultMap id="mapUser" type="com.lec.spring.domain.User">
        <result column="u_id" property="id"/>
        <result column="u_tel" property="tel"/>
        <result column="u_name" property="name"/>
        <result column="u_username" property="username"/>
        <result column="u_name" property="name"/>
        <result column="u_password" property="password"/>
        <result column="u_address" property="address"/>
        <result column="u_gender" property="gender"/>
        <result column="u_birthday" property="birthday"/>
        <result column="u_profile_picture" property="profile_picture"/>
        <result column="u_regdate" property="regdate"/>
    </resultMap>

    <resultMap id="mapBoard" type="com.lec.spring.domain.Board">
        <result column="b_id" property="id"/>
        <result column="b_title" property="title"/>
        <result column="b_content" property="content"/>
        <result column="b_viewcnt" property="viewcnt"/>
        <result column="b_regdate" property="regdate"/>
        <association property="user" resultMap="mapUser"/>
        <association property="boardType" resultMap="mapBoardType"/>
        <association property="club" resultMap="mapClub"/>
    </resultMap>

    <select id="allmenu" resultMap="mapBoard">
        select
            b.id "b_id",
            b.title "b_title",
            b.content "b_content",
            b.viewcnt "b_viewcnt",
            b.regdate "b_regdate",
            u.id "u_id",
            u.tel "u_tel",
            u.username "u_username",
            u.password "u_password",
            u.address "u_address",
            u.gender "u_gender",
            u.birthday "u_birthday",
            u.profile_picture "u_profile_picture",
            u.regdate "u_regdate",
            c.id "c_id",
            c.name "c_name",
            c.category "c_category",
            c.detail_category "c_detail_category",
            c.intro "c_inrto",
            c.content "c_content",
            c.representative_picture "c_representative_picture",
            bt.id "bt_id",
            bt.name "bt_name"
            from BOARD b
            LEFT join club c on b.club_id = c.id
            join user u on b.user_id = u.id
            join BOARD_TYPE bt on b.board_type_id = bt.id
    </select>
    
<!--    해당 클럽내 게시판 목록-->
    <select id="findbyClubPosts" resultMap="mapBoard">
        <include refid="SELECT_BASE"/>
        AND b.board_type_id = 1
        AND b.club_id = #{clubId}
        AND (#{title} IS NULL OR #{title} = '' OR b.title LIKE CONCAT('%', #{title}, '%'))
        ORDER BY b.id desc
        LIMIT #{from}, #{rows}
    </select>

    <select id="clubPostsListAll" resultType="int">
        SELECT COUNT(*)
        FROM BOARD b
                 JOIN USER u ON b.user_id = u.id
                 JOIN BOARD_TYPE bt ON b.board_type_id = bt.id
                 JOIN CLUB c ON b.club_id = c.id
        WHERE c.id = #{clubId}
        AND bt.id = 1
        AND (#{title} IS NULL OR #{title} = '' OR b.title LIKE CONCAT('%', #{title}, '%'))
    </select>

</mapper>
