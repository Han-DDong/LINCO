<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 추가 -->
<!--        /* insert 를 태그로 생성 , 아이디 필수, 아이디는 정확하게 매소드 이름과 1:1 대응되어야 함!*/-->
<mapper namespace="com.lec.spring.repository.SocializingRepository">
    <insert id="save" flushCache="true"
            parameterType="com.lec.spring.domain.Socializing"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    INSERT INTO socializing
        (venue_id, socializing_title, category, detail_category, address, place_name , meeting_date, meeting_time, limit_num, content, total_price, img)
    VALUES
        (#{venue_id}, #{socializing_title}, #{category}, #{detail_category}, #{address}, #{place_name}, #{meeting_date}, #{meeting_time}, #{limit_num}, #{content}, #{total_price},
        #{img})
    </insert>

    <sql id="SELECT_BASE">
        SELECT
            u.id
            , u.tel
            , u.username
            , u.name
            , u.profile_picture
            , s.venue_id
            , s.socializing_title
            , s.category
            , s.detail_category
            , s.address
            , s.place_name
            , s.meeting_date
            , s.meeting_time
            , s.limit_num
            , s.content
            , s.total_price
            , s.img
            , s.regdate
        FROM
            user u, socializing s
        WHERE
            1 = 1
    </sql>

    <sql id="SELECT_SOCIALIZING">
        SELECT
            id,
            venue_id,
            socializing_title,
            category,
            detail_category,
            address,
            place_name,
            meeting_date,
            meeting_time,
            limit_num,
            content,
            total_price,
            img,
            regdate

        FROM socializing
        WHERE
            1 = 1
    </sql>

    <resultMap id="mapSocializing" type="com.lec.spring.domain.Socializing">
        <result column="s_id" property="id"/>
        <result column="s_socializing_title" property="socializing_title"/>
        <result column="s_category" property="category"/>
        <result column="s_detail_category" property="detail_category"/>
        <result column="s_address" property="address"/>
        <result column="s_place_name" property="place_name"/>
        <result column="s_meeting_date" property="meeting_date"/>
        <result column="s_meeting_time" property="meeting_time"/>
        <result column="s_limit_num" property="limit_num"/>
        <result column="s_content" property="content"/>
        <result column="s_total_price" property="total_price"/>
        <result column="s_img" property="img"/>
        <result column="s_regdate" property="regdate"/>
    </resultMap>

    <resultMap id="mapuser" type="com.lec.spring.domain.User">
        <id column="u_id" property="id"/>
        <result column="u_tel" property="tel"/>
        <result column="u_username" property="username"/>
        <result column="u_password" property="password"/>
        <result column="u_address" property="address"/>
        <result column="u_gender" property="gender"/>
        <result column="u_birthday" property="birthday"/>
        <result column="u_profile_picture" property="profile_picture"/>
        <result column="u_regdate" property="regdate"/>


    </resultMap>


    <resultMap id="mapusersocializing" type="com.lec.spring.domain.UserSocializing">
        <result column="us_role" property="role"/>
        <result column="us_user_id" property="user_id"/>
        <result column="us_socializing_id" property="socializing_id"/>
        <collection property="socializing" resultMap="mapSocializing"/>
        <collection property="user" resultMap="mapuser"/>

    </resultMap>
    

    <!-- 특정 id 글 내용 읽기(조회수 증가도!)-->
    <select id="findById" resultType="com.lec.spring.domain.Socializing">
        <include refid="SELECT_SOCIALIZING"/>
        AND id = #{id};
    </select>

<!--    특정 소셜에 가입한 사용자의 수-->
    <select id="membercnt" resultType="int">
        SELECT count(*)
        from user_socializing
        WHERE socializing_id = #{param1};
    </select>

    <!-- 수정 -->
    <update id="update" flushCache="true"
            parameterType="com.lec.spring.domain.Socializing">
    UPDATE socializing
    SET socializing_title = #{socializing_title}, content = #{content}
    WHERE id = #{id}
    </update>


    <!-- 삭제-->
    <delete id="delete" flushCache="true"
            parameterType="com.lec.spring.domain.Socializing">
        DELETE FROM socializing
        WHERE id = #{id}
    </delete>

<!--    조건에 맞는 소셜 리스트들-->
    <select id="selectFromRow" resultType="com.lec.spring.domain.Socializing">
        <include refid="SELECT_SOCIALIZING"/>
        AND (#{param3} IS NULL OR #{param3} = '' OR address LIKE CONCAT('%', #{param3}, '%'))
        AND (#{param4} IS NULL OR #{param4} = '' OR category = #{param4})
        AND (#{param5} IS NULL OR #{param5} = '' OR detail_category = #{param5})

        ORDER BY id DESC
        LIMIT #{param1}, #{param2}
    </select>

<!--    페이지 계산을 위한 각각의 조건에 맞는 리스트 개수-->
    <select id="countSelectAddress" resultType="int">
        SELECT count(*) FROM socializing
        where
            (#{param1} IS NULL OR #{param1} = '' OR address LIKE CONCAT('%', #{param1}, '%'))
            AND (#{param2} IS NULL OR #{param2} = '' OR category = #{param2})

            AND (#{param3} IS NULL OR #{param3} = '' OR detail_category= #{param3})
    </select>

    <select id="findBySocialMembers" flushCache="true"  resultMap="mapusersocializing">
        select
            u.id                    "u_id",
            u.tel                   "u_tel",
            u.username              "u_username",
            u.password              "u_password",
            u.name                  "u_name",
            u.address               "u_address",
            u.gender                "u_gender",
            u.birthday              "u_birthday",
            u.profile_picture       "u_profile_picture",
            u.regdate               "u_regdate",
            u.provider              "u_provider",
            u.providerId            "u_providerId",
            us.user_id              "us_user_id",
            us.socializing_id       "us_socializing_id",
            s.id                    "s_id",
            s.venue_id              "s_venue_id",
            s.socializing_title     "s_socializing_title",
            s.category              "s_category",
            s.detail_category       "s_detail_category",
            s.address               "s_address",
            s.place_name            "s_place_name",
            s.meeting_date          "s_meeting_date",
            s.meeting_time          "s_meeting_time",
            s.limit_num             "s_limit_num",
            s.content               "s_content",
            s.total_price           "s_total_price",
            s.img                   "s_img",
            s.regdate               "s_regdate",
            us.role                 "us_role"
        FROM user_socializing us, user u , socializing s
        where us.user_id = u.id AND us.socializing_id = s.id
        AND us.socializing_id = ${param1}
    </select>

    <select id="findBySocializingMaster" resultMap="mapusersocializing">
        select
            u.id                    "u_id",
            u.tel                   "u_tel",
            u.username              "u_username",
            u.password              "u_password",
            u.address               "u_address",
            u.gender                "u_gender",
            u.birthday              "u_birthday",
            u.profile_picture       "u_profile_prcture",
            u.regdate               "u_regdate",
            s.id                    "s_id",
            s.socializing_title     "s_socializing_title",
            us.role                 "us_role"
        FROM user_socializing us
                 join user u on us.user_id = u.id
                 join socializing s on us.socializing_id = s.id
        where us.socializing_id = #{param1} AND us.role = 'MASTER'
    </select>



</mapper>


